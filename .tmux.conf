set -g default-terminal "screen-256color"
set -g default-command "command -v reattach-to-user-namespace > /dev/null && exec reattach-to-user-namespace -l ${SHELL} || exec ${SHELL}"

# OS-X cut-and-paste buffers
if-shell 'command -v reattach-to-user-namespace' 'bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"'
if-shell 'command -v reattach-to-user-namespace' 'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'


### Key Bindings ###

# My favorite prefix.
set -g prefix `
unbind C-b
bind `     send-prefix

# Screen kill window.
unbind k
bind k     confirm-before kill-window

# Screen style last window
unbind space
bind space last-window

# Handy commands.
bind-key / command-prompt -p "man page: " "split-window 'exec man %%'"
bind-key v command-prompt -p "vim: " "split-window 'exec vim %%'"
bind-key S command-prompt -p "ssh: " "new-window -n %1 'ssh %1'"

bind-key c new-window -c "#{pane_current_path}"

# Monitor Activity
bind m set-window-option monitor-activity
set -g visual-activity on

#### VIM-a-palooza ####
# use vim motion keys while in copy mode
setw -g mode-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# Vim like cut-and-paste
#unbind [
bind Escape copy-mode
#unbind p
#bind p paste-buffer
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy y copy-selection

# Use "v" and "s" to do vertical/horizontal splits
bind s split-window -v
bind v split-window -h

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run-shell "[ '#{pane_current_command}' = 'vim' -o '#{window_panes}' -eq 1 ] && tmux send-keys C-h || tmux select-pane -L"
bind -n C-j run-shell "[ '#{pane_current_command}' = 'vim' -o '#{window_panes}' -eq 1 ] && tmux send-keys C-j || tmux select-pane -D"
bind -n C-k run-shell "[ '#{pane_current_command}' = 'vim' -o '#{window_panes}' -eq 1 ] && tmux send-keys C-k || tmux select-pane -U"
bind -n C-l run-shell "[ '#{pane_current_command}' = 'vim' -o '#{window_panes}' -eq 1 ] && tmux send-keys C-l || tmux select-pane -R"
bind -n C-\ run-shell "[ '#{pane_current_command}' = 'vim' -o '#{window_panes}' -eq 1 ] && tmux send-keys 'C-\\' || tmux select-pane -l"

## Move between panes
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

## quick pane cycling
#unbind ^w
#bind ^w select-pane -t :.+

## use the vim resize keys
#bind -r < resize-pane -L 10
#bind -r > resize-pane -R 10
#bind -r - resize-pane -D 10
#bind -r + resize-pane -U 10

## Panes (parts of windows)
#bind -r up    resize-pane -U 1
#bind -r down  resize-pane -D 1
#bind -r left  resize-pane -L 1
#bind -r right resize-pane -R 1
#bind tab   next-layout

bind _   split-window
bind |   split-window -h

### Options ###

# We like the history.
set -g history-limit 10000

# Enable utf8. Yes, Please!
setw -g utf8 on

# Tweak the search
setw -g wrap-search off

# Enable automatic window renaming to the running command.
setw -g automatic-rename on
setw -g allow-rename off

# Set the Terminal's window title
set -g set-titles on
set -g set-titles-string "tmux(#S) #I:#W"

### Theme ###
# Status bar.
set -g status-utf8 on
set -g status-left-length 15
set -g status-interval 30
set -g status-attr dim
set -g status-left-length 20
set -g status-right-length 30
set -g status-justify centre # center spelled funny
set-option -g status-left-style fg='#222222'
set -g status-left  '#[bg=#0088ff]#[fg=#ffff00] #(echo "${SHORTHOST:-local}") #[default]#[fg=#0088ff]⮀#[default] rspec'
set -g status-right "#[fg=#44ff22]⮂#[default]#[bg=#44ff22]#[fg=#8888bb] #{session_name} #[fg=#222222]⮃ #[fg=black]%l:%M%P %Y/%m/%d#[default]"

#### Colors #####
# When it "[tmux]" mode...
set-window-option -g mode-style                  fg='#dddddd',bg='#2222ee'

# Status line
set-window-option -g status-style                fg='#dddddd',bg='#222222'
set-window-option -g window-status-style         fg='#aaaaaa'
set-window-option -g window-status-current-style fg=colour166

# Enable mouse support (works in iTerm)
set-window-option -g mode-mouse copy-mode # Mouse works, except it doesn't start copy mode. (tmux 1.6)
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on

# Message popup.
set-option -g message-fg black
set-option -g message-bg green

# EOF
